# This is a basic workflow to help you get started with Actions

name: build-and-deploy
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with: 
          python-version: '3.8'

      # Runs a set of commands using the runners shell
      - name: Install nbconvert
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert
          
      - name: Convert notebook
        run: jupyter nbconvert --to python traffic.ipynb    
      
      - name: Upload python script
        uses: actions/upload-artifact@v2
        with:
          name: traffic.py
          path: traffic.py
    deploy:
      needs: build
      runs-on: ubuntu-latest  
      steps:
        - name: Download python script from build
          uses: actions/download-artifact@v2
          with:
            name: traffic.py    
        - name: Install AWS CLI
          run: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install    
        - name: Set up AWS credentials
          shell: bash
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: |
            mkdir -p ~/.aws
            touch ~/.aws/credentials
            echo "[default]
            aws_access_key_id = $AWS_ACCESS_KEY_ID
            aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials    
        - name: Upload to S3
          run: aws s3 cp traffic.py s3://${{secrets.S3_BUCKET}}/traffic_${GITHUB_SHA}.py --region us-east-1    
        - name: Update Glue job
          run: |
            aws glue update-job --job-name "Traffic ETL" --job-update "Role=AWSGlueServiceRole-TrafficCrawler,Command={Name=glueetl,ScriptLocation=s3://${{secrets.S3_BUCKET}}/traffic_${GITHUB_SHA}.py},Connections={Connections=redshift}" \
--region us-east-1

Role=AWSGlueServiceRole-TrafficCrawler,Command={Name=glueetl,ScriptLocation=s3://${{secrets.S3_BUCKET}}/traffic_${GITHUB_SHA}.py},Connections={Connections=redshift}

